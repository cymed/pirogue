name: Run tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        pg-version: ['9.6', '10', '11']
      fail-fast: true

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:${{ matrix.pg-version }}
        # Provide the password for postgres
        env:
          POSTGRES_USER: pirogue
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: pirogue_test_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    env:
      PGUSER: postgres

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install requirements
      run: |
        pip install -r requirements.txt
        pip install -r test/requirements.txt

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('test/requirements.txt') }}
        restore-keys: |
          pip-${{ hashFiles('requirements.txt') }}
          pip-

    - name: Setup pirogue
      run: |
        VERSION=${GITHUB_REF:-0.0.0}
        VERSION=${VERSION##*/}
        sed -i "s/__VERSION__/${VERSION}/g" setup.py
        python setup.py install
        pirogue -v

    - name: Setup tests
      run: |
        printf "[pirogue_test]\nhost=localhost\ndbname=pirogue_test_db\nuser=pirogue\npassword=1234\n\n" >> ~/.pg_service.conf
        PGSERVICE=pirogue_test psql --quiet -v ON_ERROR_STOP=on -f test/demo_data.sql

    - name: Run bash tests
      run: |
        ./test/test_simple_inheritance.sh

    - name: Run Python tests
      run: nose2 -v


